buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
plugins {
    id 'eclipse'
    id 'maven-publish'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

version = '1.5.0-pre3'
group = 'net.coderbot.iris'
archivesBaseName = 'lycoris-mc1.18.2'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.18.2'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'examplemod'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'examplemod'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'examplemod'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

mixin {
    add sourceSets.main, 'iris.refmap.json'
    config 'iris-batched-entity-rendering.mixins.json'
    config 'mixins.iris.bettermipmaps.json'
    config 'mixins.iris.compat.sodium.json'
    config 'mixins.iris.fantastic.json'
    config 'mixins.iris.fixes.maxfpscrash.json'
//    config 'mixins.iris.integrationtest.json'
    config 'mixins.iris.json'
    config 'mixins.iris.optimized-stitching.json'
    config 'mixins.iris.vertexformat.json'
    debug.verbose = true
    debug.export = true
}

repositories {
     flatDir {
         dir 'libs'
     }
    mavenCentral()
    maven { url 'https://github.com/SQwatermark/maven-repository/raw/main' }
}

// 启用jarJar
jarJar.enable()

// 混淆jarJar
reobf.create('jarJar')

tasks.jarJar.getArchiveClassifier().convention('')

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.2.0'
    implementation fg.deobf('me.jellysquid.mods:wisteria-mc1.18.2:0.4.2-pre3')

    // 仅在开发环境引入
    compileOnly 'org.apache.ant:ant:1.8.2'

    // 因为sodium已包含joml，所以没必要打包
    compileOnly 'org.joml:joml:1.10.4'

    // 在开发环境引入jcpp
    minecraftLibrary('org.anarres:jcpp:1.4.14') {
        // jcpp会引入冲突的依赖，必须阻止依赖传递
        transitive(false)
    }
    minecraftLibrary('org.apache.commons:commons-collections4:4.4') {
        transitive(false)
    }
    // 打包jcpp
    jarJar(group: 'org.anarres', name: 'jcpp', version: '[1.0,2.0)') {
        transitive(false)
    }
    jarJar(group: 'org.apache.commons', name: 'commons-collections4', version: '[4.0,5.0)') {
        transitive(false)
    }

    // 因为glsl-transformer依赖4.11.1版本的antlr4-runtime但是forge环境依赖更早的版本
    // 为避免冲突，只能把这两个依赖都打包进模组，并修改antlr4.11.1版本的包名
    //    minecraftLibrary "org.antlr:antlr4-runtime:4.11.1"
    //    minecraftLibrary "io.github.douira:glsl-transformer:2.0.0-pre8"
    //    jarJar(group: 'org.antlr', name: 'antlr4-runtime', version: '[4.0,5.0)')
    //    jarJar(group: 'io.github.douira', name: 'glsl-transformer', version: '[2.0,3.0)')

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

// 打包源码
java {
    withSourcesJar()
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "lycoris",
                "Specification-Vendor"    : "SQwatermark",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "SQwatermark",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact tasks.jarJar
            artifact sourcesJar
            groupId = group
            artifactId = archivesBaseName
            version = version
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/../maven-repository"
        }
    }
}